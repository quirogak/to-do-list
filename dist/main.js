(()=>{const t=(t,e)=>({title:t,description:e}),e=(t,e,o,c,n)=>({title:t,description:e,dueDate:o,priority:c,checked:n}),o=t=>{const e=document.querySelector(".right-part"),o=document.createElement("div");e.appendChild(o),o.classList.add("project-container");const c=document.createElement("input");o.appendChild(c),c.type="text",c.classList.add("project-title"),c.classList.add("title-input"+t),c.value="New Title";const n=document.createElement("textarea");o.appendChild(n),n.type="text",n.classList.add("project-desc"),n.classList.add("desc-input"+t),n.value="Description...";const i=document.createElement("div");o.appendChild(i),i.classList.add("todos-container");const s=document.createElement("div");o.appendChild(s),s.classList.add("bottom-container");const l=document.createElement("button");s.appendChild(l),l.classList.add("submit-button"),l.classList.add("submit-project-button"+t),l.textContent="Submit Details";const d=document.createElement("button");return s.appendChild(d),d.type="button",d.classList.add("submit-todo"),d.classList.add("submit-todo-button"+t),d.textContent="+",{titleInput:c,descriptionInput:n,submitToDo:d,submitProject:l}},c=(t,e)=>{const o=document.querySelector(".todos-container"),c=document.createElement("div");c.classList.add("todo-container"),c.classList.add("todo-container"+e),o.appendChild(c);const n=document.createElement("div");n.classList.add("basic-elements-container"),c.appendChild(n);const i=document.createElement("button");i.classList.add("delete-button"),i.classList.add("delete-button"+e),i.textContent="x",n.appendChild(i);const s=document.createElement("input");n.appendChild(s),s.value="New to-do",s.type="text",s.classList.add("todo-title"+e),s.classList.add("expand-todo");const l=document.createElement("input");n.appendChild(l),l.type="checkbox",l.classList.add("checkbox"+e),l.classList.add("checkbox"+t);const d=document.createElement("input");c.appendChild(d),d.type="text",d.classList.add("todo-desc"+e),d.classList.add("todo-description"),d.value="Description...";const r=document.createElement("input");c.appendChild(r),r.type="date",r.classList.add("todo-date"+e),r.classList.add("todo-date");const a=document.createElement("select");c.appendChild(a),a.classList.add("todo-priority"+e),a.classList.add("todo-priority");const u=document.createElement("option");u.value="High",u.textContent="High",a.appendChild(u);const p=document.createElement("option");p.value="Medium",p.textContent="Medium",a.appendChild(p);const m=document.createElement("option");return m.value="Low",m.textContent="Low",a.appendChild(m),{toDoTitle:s,descriptionInput:d,dateInput:r,setPriority:a,checkToDo:l}},n=((()=>{const e=JSON.parse(localStorage.getItem("projectElements")||"[]"),c=JSON.parse(localStorage.getItem("projectObjects")||"[]"),s=document.querySelector(".new-project"),l=()=>{const o=e[e.length-1],n=o.titleInput.value,i=o.descriptionInput.value,s=o.submitToDo.value;c.push(t(n,i,s)),localStorage.setItem("projectObjects",JSON.stringify(c))},d=()=>{(document.querySelector(".right-part").firstChild=!0)&&document.querySelector(".project-container").remove()},r=()=>{null!=document.querySelector(".project-container")&&d()},a=t=>{r(),(t=>{const e=c[t];o(t),document.querySelector(".title-input"+t).value=e.title,document.querySelector(".desc-input"+t).value=e.description})(t),n.returnToDoDOM(t).genToDoElements(),document.querySelector(".submit-project-button"+t).addEventListener("click",(t=>{(t=>{const o=t.target.classList[1].slice(-1),n=c[o];n.title=document.querySelector(".title-input"+o).value,n.description=document.querySelector(".desc-input"+o).value,((t,e)=>{document.querySelector(".number"+t).textContent=e})(o,n.title),d(),localStorage.setItem("projectObjects",JSON.stringify(c)),localStorage.setItem("projectElements",JSON.stringify(e))})(t)}))},u=t=>{(()=>{const t=document.querySelector(".tab-container"),o=document.createElement("button");o.classList.add("project-tab","number"+parseInt(e.length-1)),t.appendChild(o),o.textContent=c[c.length-1].title,d()})();const o=t.target.classList[1].slice(-1);document.querySelector(".number"+o).addEventListener("click",(()=>{a(o)}))},p=()=>{const t=document.getElementById("search-input"),e=document.getElementsByClassName("project-tab");t.addEventListener("keyup",(t=>{const{value:o}=t.target,c=o.toLowerCase();for(const t of e)t.textContent.toLowerCase().includes(c)?t.style.display="block":t.style.display="none"}))};s.addEventListener("click",(()=>{r(),e.push(o(e.length)),localStorage.setItem("projectElements",JSON.stringify(e)),n.newToDo(),e[e.length-1].submitProject.addEventListener("click",l),e[e.length-1].submitProject.addEventListener("click",u),e[e.length-1].submitProject.addEventListener("click",p)})),(()=>{const t=t=>{const e=t.target.classList[1].slice(-1);a(e)};if(localStorage.getItem("projectElements")){(()=>{const t=document.querySelector(".tab-container");for(i=0;i<c.length;i++){const e=document.createElement("button");e.classList.add("project-tab","number"+i),t.appendChild(e),e.textContent=c[i].title}})();const e=document.querySelectorAll(".project-tab");for(i=0;i<c.length;i++)e[i].addEventListener("click",(e=>{t(e)}))}})()})(),(()=>{const t=JSON.parse(localStorage.getItem("toDoElementsList")||"[]"),o=JSON.parse(localStorage.getItem("toDoObjectsList")||"[]");return{newToDo:()=>{const n=[];let l=[];const d=document.querySelector(".submit-button"),r=document.querySelector(".submit-todo");r.addEventListener("click",(t=>{(t=>{const e=t.target.classList[1].slice(-1),o=n.length;n.push(c(e,o)),s.expandToDoLogic(o),(t=>{document.querySelector(".delete-button"+t).addEventListener("click",(()=>{document.querySelector(".todo-container"+t).remove(),n.splice(t,1)}))})(o)})(t)})),d.addEventListener("click",(()=>{for(i=0;i<n.length;i++)toDoTitleValue=n[i].toDoTitle.value,toDoDescriptionValue=n[i].descriptionInput.value,toDoDateInput=n[i].dateInput.value,toDoPriority=n[i].setPriority.value,isToDoChecked=n[i].checkToDo.checked,l.push(e(toDoTitleValue,toDoDescriptionValue,toDoDateInput,toDoPriority,isToDoChecked))})),d.addEventListener("click",(()=>{t.push(n),localStorage.setItem("toDoElementsList",JSON.stringify(t))})),d.addEventListener("click",(()=>{o.push(l),localStorage.setItem("toDoObjectsList",JSON.stringify(o))}))},returnToDoDOM:n=>{const l=t[n].length,d=document.querySelector(".submit-button");document.querySelector(".submit-todo").className="old-submit-todo";const r=document.querySelector(".old-submit-todo"),a=()=>{const e=t[n].length;for(i=0;i<e;i++)s.expandToDoLogic(i)};return r.addEventListener("click",(()=>{t[n].push(c(n,i)),localStorage.setItem("toDoElementsList",JSON.stringify(t))})),r.addEventListener("click",a),d.addEventListener("click",(()=>{const c=t[n].length;for(i=0;i<c;i++)toDoTitleValue=document.querySelector(".todo-title"+i).value,toDoDescriptionValue=document.querySelector(".todo-desc"+i).value,toDoDateInputValue=document.querySelector(".todo-date"+i).value,toDoPriorityValue=document.querySelector(".todo-priority"+i).value,toDoCheckedValue=document.querySelector(".checkbox"+i).checked,void 0===o[n][i]?o[n].push(e(toDoTitleValue,toDoDescriptionValue,toDoDateInputValue,toDoPriorityValue,toDoCheckedValue)):(o[n][i].title=toDoTitleValue,o[n][i].description=toDoDescriptionValue,o[n][i].dueDate=toDoDateInputValue,o[n][i].priority=toDoPriorityValue,o[n][i].checked=toDoCheckedValue);localStorage.setItem("toDoObjectsList",JSON.stringify(o))})),{genToDoElements:()=>{for(i=0;i<l;i++)c(n,i),document.querySelector(".todo-title"+i).value=o[n][i].title,document.querySelector(".todo-desc"+i).value=o[n][i].description,document.querySelector(".todo-date"+i).value=o[n][i].dueDate,document.querySelector(".todo-priority"+i).value=o[n][i].priority,document.querySelector(".checkbox"+i).checked=o[n][i].checked;a(),((e,o)=>{const c=e=>{const c=e.target.classList[1].slice(-1);document.querySelector(".todo-container"+c).remove(),t[o].splice(c,1)};for(i=0;i<e;i++)currentDeleteButton=document.querySelector(".delete-button"+i),currentDeleteButton.addEventListener("click",(t=>{c(t)}))})(l,n),localStorage.setItem("toDoObjectsList",JSON.stringify(o)),localStorage.setItem("toDoElementsList",JSON.stringify(t))}}}}})()),s={expandToDoLogic:t=>{const e=document.querySelector(".todo-title"+t);e.addEventListener("click",(t=>{(t=>{const e=t.target.classList[0].slice(-1);document.querySelector(".expand-todo"+e),(t=>{const e=document.querySelector(".todo-desc"+t);e.style.width="80%",e.style.height="15px",e.style.padding="2px",e.style.border="1px solid black"})(e),(t=>{const e=document.querySelector(".todo-date"+t);e.style.width="80%",e.style.height="15px",e.style.padding="2px",e.style.border="1px solid black"})(e),(t=>{const e=document.querySelector(".todo-priority"+t);e.style.width="83%",e.style.height="22px",e.style.padding="2px",e.style.border="1px solid black"})(e),(t=>{document.querySelector(".todo-container"+t).style.gap="20px"})(e)})(t)}))}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,