(()=>{const e=(e,t,o)=>({title:e,description:t,addToDo:o}),t=(e,t,o,c,n)=>({title:e,description:t,dueDate:o,priority:c,checked:n}),o=e=>{const t=document.querySelector(".right-part"),o=document.createElement("div");t.appendChild(o),o.classList.add("project-container");const c=document.createElement("input");o.appendChild(c),c.type="text",c.classList.add("project-title"),c.classList.add("title-input"+e),c.value="New Title";const n=document.createElement("textarea");o.appendChild(n),n.type="text",n.classList.add("project-desc"),n.classList.add("desc-input"+e),n.value="Description...";const i=document.createElement("div");o.appendChild(i),i.classList.add("todos-container");const d=document.createElement("div");o.appendChild(d),d.classList.add("bottom-container");const l=document.createElement("button");d.appendChild(l),l.classList.add("submit-button"),l.classList.add("submit-project-button"+e),l.textContent="Submit Details";const s=document.createElement("button");return d.appendChild(s),s.type="button",s.classList.add("submit-todo"),s.classList.add("submit-todo-button"+e),s.textContent="+",{titleInput:c,descriptionInput:n,submitToDo:s,submitProject:l}},c=(e,t)=>{const o=document.querySelector(".todos-container"),c=document.createElement("div");c.classList.add("todo-container"),c.classList.add("todo-container"+t),o.appendChild(c);const n=document.createElement("div");n.classList.add("basic-elements-container"),c.appendChild(n);const i=document.createElement("button");i.classList.add("delete-button"),i.classList.add("delete-button"+t),i.textContent="x",n.appendChild(i);const d=document.createElement("input");n.appendChild(d),d.value="New to-do",d.type="text",d.classList.add("todo-title"+t),d.classList.add("expand-todo");const l=document.createElement("input");n.appendChild(l),l.type="checkbox",l.classList.add("checkbox"+t),l.classList.add("checkbox"+e);const s=document.createElement("input");c.appendChild(s),s.type="text",s.classList.add("todo-desc"+t),s.classList.add("todo-description"),s.value="Description...";const r=document.createElement("input");c.appendChild(r),r.type="date",r.classList.add("todo-date"+t),r.classList.add("todo-date");const u=document.createElement("select");c.appendChild(u),u.classList.add("todo-priority"+t),u.classList.add("todo-priority");const a=document.createElement("option");a.value="High",a.textContent="High",u.appendChild(a);const p=document.createElement("option");p.value="Medium",p.textContent="Medium",u.appendChild(p);const m=document.createElement("option");return m.value="Low",m.textContent="Low",u.appendChild(m),{toDoTitle:d,descriptionInput:s,dateInput:r,setPriority:u,checkToDo:l}},n=((()=>{const t=[],c=[],i=document.querySelector(".new-project"),d=()=>{const o=t[t.length-1],n=o.titleInput.value,i=o.descriptionInput.value,d=o.submitToDo.value;c.push(e(n,i,d))},l=()=>{document.querySelector(".project-container").remove()},s=()=>{null!=document.querySelector(".project-container")&&l()},r=e=>{s(),(e=>{const t=c[e];o(e),document.querySelector(".title-input"+e).value=t.title,document.querySelector(".desc-input"+e).value=t.description})(e),n.returnToDoDOM(e).genToDoElements(),document.querySelector(".submit-project-button"+e).addEventListener("click",(e=>{(e=>{const t=e.target.classList[1].slice(-1),o=c[t];o.title=document.querySelector(".title-input"+t).value,o.description=document.querySelector(".desc-input"+t).value,((e,t)=>{document.querySelector(".number"+e).textContent=t})(t,o.title),l()})(e)}))},u=e=>{(()=>{const e=document.querySelector(".tab-container"),o=document.createElement("button");o.classList.add("project-tab","number"+parseInt(t.length-1)),e.appendChild(o),o.textContent=c[c.length-1].title,l()})();const o=e.target.classList[1].slice(-1);document.querySelector(".number"+o).addEventListener("click",(()=>{r(o)}))},a=()=>{const e=document.getElementById("search-input"),t=document.getElementsByClassName("project-tab");e.addEventListener("keyup",(e=>{const{value:o}=e.target,c=o.toLowerCase();for(const e of t)e.textContent.toLowerCase().includes(c)?e.style.display="block":e.style.display="none"}))};i.addEventListener("click",(()=>{s(),t.push(o(t.length)),n.newToDo(),t[t.length-1].submitProject.addEventListener("click",d),t[t.length-1].submitProject.addEventListener("click",u),t[t.length-1].submitProject.addEventListener("click",a)}))})(),(()=>{const e=[],o=[];return{newToDo:()=>{const n=[];let l=[];const s=document.querySelector(".submit-button"),r=document.querySelector(".submit-todo");r.addEventListener("click",(e=>{(e=>{const t=e.target.classList[1].slice(-1),o=n.length;n.push(c(t,o)),d.expandToDoLogic(o),(e=>{document.querySelector(".delete-button"+e).addEventListener("click",(()=>{document.querySelector(".todo-container"+e).remove(),n.splice(e,1)}))})(o)})(e)})),s.addEventListener("click",(()=>{for(i=0;i<n.length;i++)toDoTitleValue=n[i].toDoTitle.value,toDoDescriptionValue=n[i].descriptionInput.value,toDoDateInput=n[i].dateInput.value,toDoPriority=n[i].setPriority.value,isToDoChecked=n[i].checkToDo.checked,l.push(t(toDoTitleValue,toDoDescriptionValue,toDoDateInput,toDoPriority,isToDoChecked))})),s.addEventListener("click",(()=>{e.push(n)})),s.addEventListener("click",(()=>{o.push(l)}))},returnToDoDOM:n=>{const l=e[n].length,s=document.querySelector(".submit-button");document.querySelector(".submit-todo").className="old-submit-todo";const r=document.querySelector(".old-submit-todo"),u=()=>{const t=e[n].length;for(i=0;i<t;i++)d.expandToDoLogic(i)};return r.addEventListener("click",(()=>{e[n].push(c(n,i))})),r.addEventListener("click",u),s.addEventListener("click",(()=>{const c=e[n].length;for(i=0;i<c;i++)toDoTitleValue=document.querySelector(".todo-title"+i).value,toDoDescriptionValue=document.querySelector(".todo-desc"+i).value,toDoDateInputValue=document.querySelector(".todo-date"+i).value,toDoPriorityValue=document.querySelector(".todo-priority"+i).value,toDoCheckedValue=document.querySelector(".checkbox"+i).checked,void 0===o[n][i]?o[n].push(t(toDoTitleValue,toDoDescriptionValue,toDoDateInputValue,toDoPriorityValue,toDoCheckedValue)):(o[n][i].title=toDoTitleValue,o[n][i].description=toDoDescriptionValue,o[n][i].dueDate=toDoDateInputValue,o[n][i].priority=toDoPriorityValue,o[n][i].checked=toDoCheckedValue)})),{genToDoElements:()=>{for(i=0;i<l;i++)c(n,i),document.querySelector(".todo-title"+i).value=o[n][i].title,document.querySelector(".todo-desc"+i).value=o[n][i].description,document.querySelector(".todo-date"+i).value=o[n][i].dueDate,document.querySelector(".todo-priority"+i).value=o[n][i].priority,document.querySelector(".checkbox"+i).checked=o[n][i].checked;u(),((t,o)=>{const c=t=>{const c=t.target.classList[1].slice(-1);document.querySelector(".todo-container"+c).remove(),e[o].splice(c,1)};for(i=0;i<t;i++)currentDeleteButton=document.querySelector(".delete-button"+i),currentDeleteButton.addEventListener("click",(e=>{c(e)}))})(l,n)}}}}})()),d={expandToDoLogic:e=>{const t=document.querySelector(".todo-title"+e);t.addEventListener("click",(e=>{(e=>{const t=e.target.classList[0].slice(-1);document.querySelector(".expand-todo"+t),(e=>{const t=document.querySelector(".todo-desc"+e);t.style.width="80%",t.style.height="15px",t.style.padding="2px",t.style.border="1px solid black"})(t),(e=>{const t=document.querySelector(".todo-date"+e);t.style.width="80%",t.style.height="15px",t.style.padding="2px",t.style.border="1px solid black"})(t),(e=>{const t=document.querySelector(".todo-priority"+e);t.style.width="83%",t.style.height="22px",t.style.padding="2px",t.style.border="1px solid black"})(t),(e=>{document.querySelector(".todo-container"+e).style.gap="20px"})(t)})(e)}))}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,